@model EntityLayer.Concrete.Writer
@{
    ViewData["Title"] = "YazarDuzenle";
    Layout = "~/Views/Shared/YazarLayout.cshtml";
}


@using (Html.BeginForm("YazarDuzenle", "Yazar", FormMethod.Post))
{
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Yazar Düzenle</h4>
                <br />
                <form class="forms-sample">
                    @Html.HiddenFor(x => x.Id, new { @class = "form-control" })
                    <div class="form-group">
                        <label for="exampleInputName1">Ad</label>
                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputName1">Soyad</label>
                        @Html.TextBoxFor(x => x.Surname, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Surname, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail3">Mail</label>
                        @Html.TextBoxFor(x => x.Mail, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(x => x.Mail, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword4">Şifre</label>
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                    </div>
                    <button type="submit" class="btn btn-gradient-success mr-2">Kaydet</button>
                </form>
            </div>
        </div>
    </div>
}
